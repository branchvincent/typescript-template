name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

{% raw -%}
jobs:
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - name: Set Node version
        run: echo "NODE_VERSION=$(jq -r .engines.node build/package.json)" > $GITHUB_ENV
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run linters
        run: yarn lint --no-fix
      - name: Run tests
        run: yarn test

  release:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Bump version
        uses: TriPSs/conventional-changelog-action@v3
        id: version
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-user-name: "GitHub Actions"
          git-user-email: "action@github.com"
          version-file: pyproject.toml
          version-path: tool.poetry.version
          preset: conventionalcommits
          output-file: false
      - name: Set new commit hash
        run: echo "SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: Create release
        uses: actions/create-release@v1
        if: ${{ steps.version.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: ${{ steps.version.outputs.tag }}
          body: ${{ steps.version.outputs.clean_changelog }}
          commitish: ${{ env.SHA }}
{%- endraw %}
      {% if not private -%}
      {% raw -%}
      - name: Publish to NPM
        if: ${{ steps.version.outputs.skipped == 'false' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish
      {%- endraw %}
      {%- endif %}
